{% extends "layouts/main.njk" %}

{% set primaryNavId = "placements" %}

{% set title %}
  {% if pagination.totalCount > 0 %}
    {{ pagination.totalCount | numeral('0,0') }} placement {{- "s" if pagination.totalCount > 1 }} found
  {% else %}
    No school placements found
  {% endif %}
{% endset %}

{% set caption = "Find placement" %}

{% block pageTitle %}
{{ "Error: " if errors }}{{ title + " - " if title }}{{ caption + " - " if caption }}{{ serviceName }} - GOV.UK
{% endblock %}

{% block beforeContent %}
{{ govukBackLink({
  text: "Back",
  href: actions.back
}) }}
{% endblock %}

{% block content %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

      {% include "_includes/page-heading.njk" %}

      {% include "./_search-terms.njk" %}

    </div>
  </div>

  <div class="app-filter-layout">
    <div class="app-filter-layout__filter">

      {% include "./_filter-panel.njk" %}

    </div>

    <div class="app-filter-layout__content">

      <div class="app-action-bar">
        <div class="app-action-bar__filter"></div>
      </div>

      {# {% include "./_sort-options.njk" %} #}

      {% if results.length %}

        <ul class="app-search-results">
          {% for result in results %}
            <li class="app-search-results__item">
              {{ appResultDetail({
                href: baseUrl + "/placements/find/results/" + result.id,
                schoolName: result.school.name,
                placementName: result.name,
                minAge: result.school.minAge,
                maxAge: result.school.maxAge,
                establishmentType: result.school.establishmentType | getEstablishmentTypeLabel,
                gender: result.school.gender | getGenderLabel,
                religiousCharacter: result.school.religiousCharacter | getReligiousCharacterLabel,
                urbanRural: result.school.urbanRural | getUrbanRuralLabel,
                ofstedRating: result.school.ofsted.rating | getOfstedRatingLabel if result.school.ofsted.rating else "Not known",
                mentors: result.mentors
              })}}
            </li>
          {% endfor %}
        </ul>

        {% include "_includes/pagination.njk" %}

      {% else %}

        {% include "./_no-results.njk" %}

      {% endif %}

    </div>
  </div>
{% endblock %}

{% block pageScripts %}
<script src="/public/javascripts/jquery-1.11.3.js"></script>
<script type="module">
  import { FilterToggleButton } from '/public/javascripts/components/filter-toggle-button.js'

  const filterToggleButton = new FilterToggleButton({
    bigModeMediaQuery: '(min-width: 48.063em)',
    startHidden: false,
    toggleButton: {
      container: $('.app-action-bar__filter'),
      showText: 'Show filter',
      hideText: 'Hide filter',
      classes: 'govuk-button--secondary govuk-!-margin-bottom-3'
    },
    closeButton: {
      container: $('.app-filter__header-action'),
      text: 'Close'
    },
    filter: {
      container: $('.app-filter-layout__filter')
    }
  })

  filterToggleButton.init()
</script>


<script type="module" >
  import { CheckboxFilter } from '/public/javascripts/components/checkbox-filter.js'

  const checkboxFilterEstablishmentType = new CheckboxFilter({
    container: $('#filter-establishment-type'),
    textBox: {
      label: 'Search for school type'
    }
  })

  const checkboxFilterReligiousCharacter = new CheckboxFilter({
    container: $('#filter-religious-character'),
    textBox: {
      label: 'Search for religious character'
    }
  })

  checkboxFilterEstablishmentType.init()
  checkboxFilterReligiousCharacter.init()
</script>
{# {% if userJourney in ["browse","filter"] %}
  <script src="/public/javascripts/accessible-autocomplete.min.js"></script>
  <script src="/public/javascripts/debounce.js"></script>
  <script src="/public/javascripts/init-autocomplete.js"></script>

  <script type="text/javascript">
  initAutocomplete({
    element: "provider-autocomplete",
    input: "provider",
    path: "/provider-suggestions",
  });
  </script>
{% endif %} #}
{% endblock %}
